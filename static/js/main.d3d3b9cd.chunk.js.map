{"version":3,"sources":["index.js"],"names":["words","App","useState","index","setIndex","subIndex","setSubIndex","blink","setBlink","reverse","setReverse","useEffect","length","prev","timeout","setTimeout","Math","max","parseInt","random","clearTimeout","timeout2","className","substring","rootElement","document","getElementById","ReactDOM","render"],"mappings":"mMAIMA,EAAQ,CAAC,kBAEf,SAASC,IACP,MAA0BC,mBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAkCA,OA/BAC,qBAAU,WACR,GAAIR,IAAUH,EAAMY,OAApB,CAEA,GAAKP,IAAaL,EAAMG,GAAOS,OAAS,GACpCT,IAAUH,EAAMY,OAAS,GAAMH,EADnC,CAMA,GAAiB,IAAbJ,GAAkBI,EAGpB,OAFAC,GAAW,QACXN,GAAS,SAACS,GAAD,OAAUA,EAAO,KAI5B,IAAMC,EAAUC,YAAW,WACzBT,GAAY,SAACO,GAAD,OAAUA,GAAQJ,GAAW,EAAI,QAC5CO,KAAKC,IAAIR,EAAU,GAAKJ,IAAaL,EAAMG,GAAOS,OAAS,IAClD,IAAKM,SAAyB,IAAhBF,KAAKG,YAE/B,OAAO,kBAAMC,aAAaN,IAfxBJ,GAAW,MAgBZ,CAACL,EAAUF,EAAOM,IAGrBE,qBAAU,WACR,IAAMU,EAAWN,YAAW,WAC1BP,GAAS,SAACK,GAAD,OAAWA,OACnB,KACH,OAAO,kBAAMO,aAAaC,MACzB,CAACd,IAGF,qBAAKe,UAAU,MAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uCACMtB,EAAMG,GAAOoB,UAAU,EAAGlB,IADhC,OAC4CE,EAAQ,IAAM,WAOlE,IAAMiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC3B,EAAD,IAASuB,K","file":"static/js/main.d3d3b9cd.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { useState, useEffect } from \"react\";\nimport \"./index.css\";\nconst words = [\"Coming soon...\"];\n\nfunction App() {\n  const [index, setIndex] = useState(0);\n  const [subIndex, setSubIndex] = useState(0);\n  const [blink, setBlink] = useState(true);\n  const [reverse, setReverse] = useState(false);\n\n  // typeWriter\n  useEffect(() => {\n    if (index === words.length) return;\n\n    if ( subIndex === words[index].length + 1 &&\n        index !== words.length - 1 && !reverse ) {\n      setReverse(true);\n      return;\n    }\n\n    if (subIndex === 0 && reverse) {\n      setReverse(false);\n      setIndex((prev) => prev + 1);\n      return;\n    }\n\n    const timeout = setTimeout(() => {\n      setSubIndex((prev) => prev + (reverse ? -1 : 1));\n    }, Math.max(reverse ? 75 : subIndex === words[index].length ? 1000 :\n                150, parseInt(Math.random() * 350)));\n\n    return () => clearTimeout(timeout);\n  }, [subIndex, index, reverse]);\n\n  // blinker\n  useEffect(() => {\n    const timeout2 = setTimeout(() => {\n      setBlink((prev) => !prev);\n    }, 500);\n    return () => clearTimeout(timeout2);\n  }, [blink]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1>\n          {`${words[index].substring(0, subIndex)}${blink ? \"|\" : \" \"}`}\n        </h1>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}